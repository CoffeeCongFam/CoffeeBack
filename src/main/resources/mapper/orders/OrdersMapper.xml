<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.ucamp.coffee.domain.orders.mapper.OrdersMapper">

	<!-- 상세 조회 -->
	<resultMap id="OrderDetailResponseMap"
		type="OrdersDetailResponseDTO">

		<!-- 기본 -->
		<id property="orderId" column="ORDER_ID" />
		<result property="orderStatus" column="ORDER_STATUS" />
		<result property="totalQuantity" column="TOTAL_QUANTITY" />
		<result property="createdAt" column="CREATED_AT" />
		<result property="canceledAt" column="CANCELED_AT" />
		<result property="orderNumber" column="ORDER_NUMBER" />

		<!-- 매장 정보 -->
		<association property="store"
			javaType="com.ucamp.coffee.domain.orders.dto.OrdersDetailResponseDTO$StoreDTO">
			<id property="storeId" column="PARTNER_STORE_ID" />
			<result property="storeName" column="STORE_NAME" />
		</association>

		<!-- 구독 정보 -->
		<association property="subscription"
			javaType="com.ucamp.coffee.domain.orders.dto.OrdersDetailResponseDTO$SubscriptionDTO">
			<id property="subscriptionId" column="MEMBER_SUBSCRIPTION_ID" />
			<result property="subscriptionType" column="SUBSCRIPTION_TYPE" />
		</association>

		<!-- 메뉴 리스트 -->
		<collection property="menuList"
			ofType="com.ucamp.coffee.domain.orders.dto.OrdersDetailResponseDTO$MenuDTO">
			<id property="menuId" column="MENU_ID" />
			<result property="menuName" column="MENU_NAME" />
			<result property="menuType" column="MENU_TYPE" />
			<result property="quantity" column="QUANTITY" />
		</collection>
	</resultMap>

	<select id="selectOrderDetailResponse" parameterType="long"
		resultMap="OrderDetailResponseMap">
		SELECT
		o.ORDER_ID,
		o.ORDER_STATUS,
		o.TOTAL_QUANTITY,
		o.CREATED_AT,
		o.canceled_at,
		o.order_number,
		s.PARTNER_STORE_ID,
		s.STORE_NAME,
		ms.MEMBER_SUBSCRIPTION_ID,
		sub.SUBSCRIPTION_TYPE,
		m.MENU_ID,
		m.MENU_NAME,
		m.MENU_TYPE,
		om.QUANTITY
		FROM
		ORDERS o
		JOIN
		PARTNER_STORE s ON
		o.PARTNER_STORE_ID = s.PARTNER_STORE_ID
		JOIN
		MEMBER_SUBSCRIPTION ms ON
		o.MEMBER_SUBSCRIPTION_ID =
		ms.MEMBER_SUBSCRIPTION_ID
		JOIN PURCHASE p ON
		ms.PURCHASE_ID =
		p.PURCHASE_ID
		JOIN SUBSCRIPTION sub ON
		p.SUBSCRIPTION_ID =
		sub.SUBSCRIPTION_ID
		JOIN ORDER_MENU om ON
		o.ORDER_ID = om.ORDER_ID
		JOIN
		MENU m ON om.MENU_ID = m.MENU_ID
		WHERE
		o.ORDER_ID = #{orderId}
	</select>

	<!-- 유저의 오늘 날짜 주문 내역 조회 -->
	<select id="selectTodayOrdersByMember" parameterType="long"
		resultType="OrdersTodayResponseDTO">
		SELECT
		o.ORDER_ID,
		o.CREATED_AT,
		o.ORDER_STATUS,
		s.SUBSCRIPTION_TYPE,
		s.SUBSCRIPTION_NAME,
		ps.STORE_NAME
		FROM
		ORDERS o
		JOIN
		PARTNER_STORE ps ON
		ps.PARTNER_STORE_ID = o.PARTNER_STORE_ID
		JOIN
		MEMBER_SUBSCRIPTION ms ON
		o.MEMBER_SUBSCRIPTION_ID =
		ms.MEMBER_SUBSCRIPTION_ID
		JOIN PURCHASE p ON
		p.PURCHASE_ID =
		ms.PURCHASE_ID
		JOIN SUBSCRIPTION s ON
		s.SUBSCRIPTION_ID =
		p.SUBSCRIPTION_ID
		WHERE
		TRUNC(o.CREATED_AT) = TRUNC(SYSDATE)
		AND
		o.MEMBER_ID = #{memberId}
	</select>

	<!-- 점주의 오늘 주문 내역 + 상세 주문 내역 -->
	<resultMap type="OrdersStoreResponseDTO"
		id="OrderStoreResponseMap">

		<id property="orderId" column="ORDER_ID" />
		<result property="memberSubscriptionId"
			column="MEMBER_SUBSCRIPTION_ID" />
		<result property="orderType" column="ORDER_TYPE" />
		<result property="orderStatus" column="ORDER_STATUS" />
		<result property="rejectedReason" column="REJECTED_REASON" />
		<result property="orderNumber" column="ORDER_NUMBER" />
		<result property="createdAt" column="CREATED_AT" />
		<result property="tel" column="TEL" />
		<result property="name" column="NAME" />

		<collection property="menuList"
			ofType="com.ucamp.coffee.domain.orders.dto.OrdersStoreResponseDTO$MenuDTO">
			<id column="ORDER_MENU_ID" />
			<result property="menuId" column="MENU_ID" />
			<result property="quantity" column="QUANTITY" />
			<result property="menuName" column="MENU_NAME" />
		</collection>
	</resultMap>

	<select id="selectTodayStoreOrders"
		resultMap="OrderStoreResponseMap" parameterType="long">
		SELECT
		o.ORDER_ID,
		o.MEMBER_SUBSCRIPTION_ID ,
		o.ORDER_TYPE ,
		o.ORDER_STATUS ,
		o.REJECTED_REASON ,
		o.ORDER_NUMBER ,
		o.CREATED_AT ,
		om.ORDER_MENU_ID ,
		om.MENU_ID ,
		om.QUANTITY,
		m.MENU_NAME,
		m2.TEL ,
		m2.NAME
		FROM
		ORDERS o
		JOIN
		ORDER_MENU om ON
		om.ORDER_ID = o.ORDER_ID
		JOIN MENU m ON
		m.MENU_ID =
		om.MENU_ID
		JOIN MEMBER m2 ON m2.MEMBER_ID = o.MEMBER_ID
		WHERE
		TRUNC(o.CREATED_AT) = TRUNC(sysdate)
		AND o.PARTNER_STORE_ID =
		#{partnerStoreId}
	</select>

	<!-- 점주의 과거 날짜별 or 전체 주문 내역 -->
	<resultMap type="OrdersStorePastResponseDTO"
		id="OrderStorePastResponseMap">
		<id column="ORDER_ID" />
		<result property="orderNumber" column="ORDER_NUMBER" />
		<result property="orderStatus" column="ORDER_STATUS" />
		<result property="createdAt" column="CREATED_AT" />
		<result property="subscriptionName" column="SUBSCRIPTION_NAME" />
		<result property="name" column="NAME" />
		<result property="tel" column="TEL" />
		<collection property="menuList"
			ofType="com.ucamp.coffee.domain.orders.dto.OrdersStorePastResponseDTO$MenuDTO">
			<id column="ORDER_MENU_ID" />
			<result property="menuName" column="MENU_NAME" />
			<result property="quantity" column="QUANTITY" />
		</collection>
	</resultMap>

	<select id="selectStoreOrdersByDate"
		parameterType="OrdersStorePastRequestDTO"
		resultMap="OrderStorePastResponseMap">

		SELECT
		o.ORDER_ID,
		o.ORDER_NUMBER,
		o.ORDER_STATUS,
		o.CREATED_AT,
		om.ORDER_MENU_ID,
		om.QUANTITY,
		m.MENU_NAME,
		s.SUBSCRIPTION_NAME,
		m2.NAME,
		m2.TEL
		FROM ORDERS o
		JOIN
		MEMBER_SUBSCRIPTION ms ON
		o.MEMBER_SUBSCRIPTION_ID =
		ms.MEMBER_SUBSCRIPTION_ID
		JOIN PURCHASE p ON
		p.PURCHASE_ID =
		ms.PURCHASE_ID
		JOIN MEMBER m2 ON m2.MEMBER_ID =
		o.MEMBER_ID
		JOIN
		SUBSCRIPTION s ON s.SUBSCRIPTION_ID = p.SUBSCRIPTION_ID
		JOIN ORDER_MENU
		om ON om.ORDER_ID = o.ORDER_ID
		JOIN MENU m ON om.MENU_ID
		= m.MENU_ID
		WHERE
		o.PARTNER_STORE_ID = #{partnerStoreId}

		<if test="searchDate != null and searchDate != ''">
			AND TRUNC(o.CREATED_AT) = TO_DATE(#{searchDate},
			'YYYY-MM-DD')
		</if>

		ORDER BY o.CREATED_AT DESC
	</select>

</mapper>